<?xml version="1.0" encoding="utf-8" ?>

<job filesPerHour="1" maxFilesPerProcess="1" fileListSyntax="xrootd" simulateSubmission="false">

<command>

setenv NODEBUG yes
starver dev

set RANDOM_SEED=`echo "(&RANDOM_SEED; + $JOBINDEX) * 1000" | bc`
set JOB_INPUT_FILE=`echo $INPUTFILE0 | awk '{printf($1)}'`
set RUN_ID=`echo $INPUTFILE0 | awk '{printf($2)}'`
set JOB_NEVENTS=`echo $INPUTFILE0 | awk '{printf($3)}'`
set JOB_INPUT_FILEBASENAME=`basename $JOB_INPUT_FILE | sed 's/\.[^.]*$//'`
set FZD_FILE=`cd &FZD_DIR; ; pwd`/${JOB_INPUT_FILEBASENAME}.fzd

setenv BFC_OPTIONS_1 `echo &JOB_BFC_OPTIONS_1; | sed 's/\./,/g'`
setenv BFC_OPTIONS_2 `echo &JOB_BFC_OPTIONS_2; | sed 's/\./,/g'`
setenv BFC_OPTIONS_3 `echo &JOB_BFC_OPTIONS_3; | sed 's/\./,/g'`

echo
echo "NODEBUG:                 " $NODEBUG
echo "STAR_LIB:                " $STAR_LIB
echo "RANDOM_SEED:             " $RANDOM_SEED
echo "JOB_INPUT_FILE:          " $JOB_INPUT_FILE
echo "RUN_ID:                  " $RUN_ID
echo "JOB_NEVENTS:             " $JOB_NEVENTS
echo "JOB_INPUT_FILEBASENAME:  " $JOB_INPUT_FILEBASENAME
echo "FZD_FILE:                " $FZD_FILE
echo

pwd
ls -al


# Do not run simulation commands (i.e. do not create fzd file) if a valid
# $FZD_FILE has been provided

if ( -f $FZD_FILE ) then

	echo "FZD_FILE $FZD_FILE found. Will use it in reco..."

else

	echo "FZD_FILE $FZD_FILE not found. Will generate it..."

	set COMMAND='root4star -q -b ./GenerateVertex.C('$JOB_NEVENTS',"'$JOB_INPUT_FILE'",'$RANDOM_SEED',"vertex.txt")'
	echo
	echo "Executing..."
	echo  $COMMAND
	eval '$COMMAND' >&amp;! &OUT_DIR;/log/${JOB_INPUT_FILEBASENAME}_vertex.log

	mv .$STAR_HOST_SYS $STAR_HOST_SYS
	set COMMAND="starsim -w 0 -b ./starsim.kumac nevents=${JOB_NEVENTS} run=$RUN_ID seed=$RANDOM_SEED file=$JOB_INPUT_FILEBASENAME.fzd vertexfile=vertex.txt"
	echo
	echo "Executing..."
	echo  $COMMAND
	eval '$COMMAND' >&amp;! &OUT_DIR;/log/${JOB_INPUT_FILEBASENAME}_starsim.log
	mv $STAR_HOST_SYS .$STAR_HOST_SYS

	# Copy newly created fzd file for later reuse if desired
	rsync -av $FZD_FILE &OUT_DIR;/fzd/

	# Set valid value now so the Reco script below can use it
	set FZD_FILE=${JOB_INPUT_FILEBASENAME}.fzd

endif


set COMMAND='root4star -q -b ./EmbeddingReco.C('$JOB_NEVENTS',"'$JOB_INPUT_FILE'","'$FZD_FILE'","'$BFC_OPTIONS_1'","'$BFC_OPTIONS_2'","'$BFC_OPTIONS_3'","W")'
echo
echo "Executing..."
echo  $COMMAND
eval '$COMMAND' >&amp;! &OUT_DIR;/log/${JOB_INPUT_FILEBASENAME}_embreco.log

ls -al

echo "End of job: tralala"

</command>

<input URL="filelist:&INPUT_FILE_LIST;" />

<output fromScratch="*.MuDst.root" toURL="file:&OUT_DIR;/root/" />
<output fromScratch="*.geant.root" toURL="file:&OUT_DIR;/root/" />

<stdout URL="file:&OUT_DIR;/log/$JOBID.log" />

<Generator>
	<Location>&OUT_DIR;/sums/</Location>
</Generator>

<!--
$STAR_HOST_SYS is usually set by standard STAR login script.
 -->
<SandBox installer="ZIP">
	<Package name="tarball_&REQUEST_UID;">
		<File>file:&STAR_TRAVEX_INSTALL_DIR;/EmbeddingReco.C</File>
		<File>file:&STAR_TRAVEX_INSTALL_DIR;/GenerateVertex.C</File>
		<File>file:&STAR_TRAVEX_INSTALL_DIR;/starsim.kumac</File>
		<File>file:&STAR_TRAVEX_INSTALL_DIR;/StarDb/Calibrations/tracker/</File>
		<File>file:&STAR_TRAVEX_INSTALL_DIR;/.$STAR_HOST_SYS/</File>
	</Package>
</SandBox>

</job>
